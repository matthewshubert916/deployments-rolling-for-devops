---

# Simple Node.js VM Playbook for CentOS 6.4
#
# This extremely simple Ansible playbook sets up a minimalistic Node.js
# environment for local testing. It is built for CentOS 6.4, and is structured
# in the most simple way possible. It uses most Ansible best practices, but as
# far as organization goes, this playbook doesn't use roles, groups, etc., and
# should definitely be structured differently (using includes for each group of
# tasks) if you're using it to manage real-world infrastructure.
#
# @author Jeff Geerling, 2014

- hosts: all

  vars:
    node_apps_location: /usr/local/opt/node

  pre_tasks:
    # COMMON ###################################################################
    - name: "Common: Import EPEL and Remi GPG keys."
      rpm_key: key={{ item }} state=present
      with_items:
      - "https://fedoraproject.org/static/0608B895.txt"
      - "http://rpms.famillecollet.com/RPM-GPG-KEY-remi"

    - name: "Common: Install EPEL and Remi repos."
      command: rpm -Uvh --force {{ item.href }} creates={{ item.creates }}
      with_items:
      - {
        href: "http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm",
        creates: "/etc/yum.repos.d/epel.repo"
      }
      - {
        href: "http://rpms.famillecollet.com/enterprise/remi-release-6.rpm",
        creates: "/etc/yum.repos.d/remi.repo"
      }

    - name: "Common: Disable firewall (since this is a dev environment)."
      service: name=iptables state=stopped enabled=no

  roles:
    - nodejs

  tasks:
    # SAMPLE APP ###############################################################
    - name: "Node: Ensure Node.js app folder exists."
      file: path={{ node_apps_location }} state=directory

    # For < 100 files, the copy module is adequate. For larger copies, consider
    # using the synchronize module instead.
    - name: "Node: Copy example Node.js app to server."
      copy: src=app dest={{ node_apps_location }}

    - name: "Node: Install app dependencies defined in package.json via npm."
      npm: path={{ node_apps_location }}/app

    - name: "Node: Check list of Node.js apps running."
      command: forever list
      register: forever_list
      changed_when: false

    - name: "Node: Start example Node.js app."
      command: forever start {{ node_apps_location }}/app/app.js
      when: "forever_list.stdout.find('{{ node_apps_location}}/app/app.js') == -1"
